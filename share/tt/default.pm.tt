package [% h2ffi.perl_package_name %];

use strict;
use warnings;
use [% h2ffi.perl_minimum_version %];
use FFI::Platypus ();
use FFI::CheckLib ();
use constant {
[% FOREACH constant IN model.constants -%]
  [% constant.name %] => [% constant.perl_render %],
[% END -%]
};

my $ffi = FFI::Platypus->new(
[% IF h2ffi.libname -%]
  FFI::CheckLib::find_lib_or_die(
    lib => '[% h2ffi.libname %]',
  ),
[% ELSE -%]
  lib => undef,
[% END -%]
);

# TYPEDEFS:
[% FOREACH typedef IN model.typedefs -%]
[% FOREACH todo IN typedef.todo -%]
# TODO: [% todo %]
[% END -%]
$ffi->type([% typedef.perl_render %]);
[% END -%]

# FUNCTIONS:
[% FOREACH function IN model.functions -%]
$ffi->attach([% function.name %] => [] => 'void');
[% END -%]

1;
